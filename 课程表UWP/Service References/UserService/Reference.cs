//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 15.0.27703.1
// 
namespace 课程表UWP.UserService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="songshizhao-blog", ConfigurationName="UserService.userSoap")]
    public interface userSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="songshizhao-blog/UploadPhoto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<课程表UWP.UserService.ResponseResult> UploadPhotoAsync(string filebytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="songshizhao-blog/RegistUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<课程表UWP.UserService.ResponseResult> RegistUserAsync(string username, string password, string email, string emailcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="songshizhao-blog/GenerateSitemap", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GenerateSitemapAsync(string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="songshizhao-blog/GetUserInfoByUsername_public", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<课程表UWP.UserService.UserInfo> GetUserInfoByUsername_publicAsync(string username);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="songshizhao-blog")]
    public partial class ResponseResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool isSuccessField;
        
        private string msgAlertField;
        
        private string urlNavField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool IsSuccess {
            get {
                return this.isSuccessField;
            }
            set {
                this.isSuccessField = value;
                this.RaisePropertyChanged("IsSuccess");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MsgAlert {
            get {
                return this.msgAlertField;
            }
            set {
                this.msgAlertField = value;
                this.RaisePropertyChanged("MsgAlert");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string UrlNav {
            get {
                return this.urlNavField;
            }
            set {
                this.urlNavField = value;
                this.RaisePropertyChanged("UrlNav");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="songshizhao-blog")]
    public partial class UserInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string usernameField;
        
        private string qQUserField;
        
        private string passwordField;
        
        private string nicknameField;
        
        private string emailField;
        
        private string photoField;
        
        private bool validateField;
        
        private bool isVipField;
        
        private int levelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string QQUser {
            get {
                return this.qQUserField;
            }
            set {
                this.qQUserField = value;
                this.RaisePropertyChanged("QQUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Nickname {
            get {
                return this.nicknameField;
            }
            set {
                this.nicknameField = value;
                this.RaisePropertyChanged("Nickname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Photo {
            get {
                return this.photoField;
            }
            set {
                this.photoField = value;
                this.RaisePropertyChanged("Photo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool Validate {
            get {
                return this.validateField;
            }
            set {
                this.validateField = value;
                this.RaisePropertyChanged("Validate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool IsVip {
            get {
                return this.isVipField;
            }
            set {
                this.isVipField = value;
                this.RaisePropertyChanged("IsVip");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface userSoapChannel : 课程表UWP.UserService.userSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class userSoapClient : System.ServiceModel.ClientBase<课程表UWP.UserService.userSoap>, 课程表UWP.UserService.userSoap {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public userSoapClient() : 
                base(userSoapClient.GetDefaultBinding(), userSoapClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.userSoap.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public userSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(userSoapClient.GetBindingForEndpoint(endpointConfiguration), userSoapClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public userSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(userSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public userSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(userSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public userSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<课程表UWP.UserService.ResponseResult> UploadPhotoAsync(string filebytes) {
            return base.Channel.UploadPhotoAsync(filebytes);
        }
        
        public System.Threading.Tasks.Task<课程表UWP.UserService.ResponseResult> RegistUserAsync(string username, string password, string email, string emailcode) {
            return base.Channel.RegistUserAsync(username, password, email, emailcode);
        }
        
        public System.Threading.Tasks.Task<string> GenerateSitemapAsync(string PassWord) {
            return base.Channel.GenerateSitemapAsync(PassWord);
        }
        
        public System.Threading.Tasks.Task<课程表UWP.UserService.UserInfo> GetUserInfoByUsername_publicAsync(string username) {
            return base.Channel.GetUserInfoByUsername_publicAsync(username);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.userSoap)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.userSoap)) {
                return new System.ServiceModel.EndpointAddress("https://www.songshizhao.com/user.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return userSoapClient.GetBindingForEndpoint(EndpointConfiguration.userSoap);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return userSoapClient.GetEndpointAddress(EndpointConfiguration.userSoap);
        }
        
        public enum EndpointConfiguration {
            
            userSoap,
        }
    }
}
